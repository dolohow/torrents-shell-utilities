#!/bin/bash

ACTION=$1
USER=$2
PATH_SCRIPT="$(readlink -f ${BASH_SOURCE[0]})"

check_user() {
    if [ ! -e exclude ] ; then
        touch exclude
    elif [ `cat exclude | grep $1 | wc -l` > 0 ] ; then
        echo "$1 ma wyłączone konto"
        exit
    fi

    EXIST=`ls /var/rutorrent/rutorrent/conf/users | grep -w $1 | wc -l`
    if [ $EXIST = '0' ] ; then
        echo "$1 - nie posiada rtorrenta"
        exit
    fi

    ISSTARTED=`pgrep -u $1 rtorrent | wc -l`
    if [ -a /usr/sbin/repquota ] ; then
        DISKQUOTA=`repquota -u -s -a | grep $1 | awk '{print $2'} | tail -n1`
    else
        DISKQUOTA=0
    fi
}

start_process() {
    su $1 -c "screen -dmS rtorrent rtorrent"
    echo "$1 - czekam 5 sekund na potwierdzenie działania rtorrenta"
    sleep 5s
}

start_rt() {
    for ((c=0; c<4; c++)) ; do
        check_user $1
        if [ $ISSTARTED != '0' ] ; then
            echo "$1 - rtorrent jest już uruchomiony"
            break
        # TODO: Find a better way for checking quota
        elif [ $c = '0' ] && [ $DISKQUOTA = '+-' ] ; then
            echo "$1 - przekroczone miejsce na dysku"
            break
	elif [ $c = '0' ] ; then
            start_process
        elif [ $c = '1' ] ; then
            echo "$1 - kasuje pliki rtorrenta i sesji screen"
            rm -f /home*/$1/.rtorrent/rpc.socket
            rm -f /home*/$1/.rtorrent/rtorrent.lock
            # Legacy
            rm -f /home*/$1/rtorrent/rpc.socket
            rm -f /home*/$1/rtorrent/rtorrent.lock
            rm -f /home*/$1/rtorrent/session/rpc.socket
            rm -f /home*/$1/rtorrent/session/rtorrent.lock
            rm -fr /var/run/screen/S-$1
            start_process
        elif [ $c = '2' ] ; then
            echo "$1 - Usuwam wszystkie załadowane torrenty"
            rm -f /home*/$1/.rtorrent/*
            # Legacy
            rm -f /home*/$1/rtorrent/session/*
            rm -f /home*/$1/rtorrent/*
            start_process
        fi
    done
}

stop_rt() {
    if [ $ISSTARTED = '0' ] ; then
        echo "$1 - rtorrent jest już zatrzymany"
    else
        pkill -SIGTERM -u $1 rtorrent
        echo "$1 - rtorrent został zatrzymany"
    fi
}

restart_rt() {
    stop_rt
    sleep 2s
    start_rt
}

status_rt() {
    if [ $ISSTARTED = '0' ] ; then
        echo "(0) $1"
    else
        echo "(1) $1"
    fi
}

action_all() {
    for rt_users in /var/rutorrent/rutorrent/conf/users/* ; do
        rt_users=`echo $rt_users | \
            sed -e 's/\/var\/rutorrent\/rutorrent\/conf\/users\///g'`
        $PATH_SCRIPT $1 $rt_users
    done
}

if [ $USER = "all" ] ; then
    if [ $ACTION = "start" ] ; then
        action_all start
    elif [ $ACTION = "stop" ] ; then
        action_all stop
    elif [ $ACTION = "restart" ] ; then
        action_all restart
    elif [ $ACTION = "status" ] ; then
        action_all status
    fi

elif [ $USER != "all" ] ; then
    check_user $USER
    if [ $ACTION = "start" ] ; then
        start_rt $USER
    elif [ $ACTION = "stop" ] ; then
        stop_rt $USER
    elif [ $ACTION = "restart" ] ; then
        restart_rt $USER
    elif [ $ACTION = "status" ] ; then
        status_rt $USER
    fi
fi
