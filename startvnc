#!/bin/bash

ACTION=$1
USER=$2
PATH_SCRIPT="$(readlink -f ${BASH_SOURCE[0]})"

check_user() {
    HAVEVNC=`cat vnclist | grep -x $1 | wc -l`
    if [ $HAVEVNC = '0' ] ; then
        >&2 echo "does not have VNC"
        exit
    fi
    VNCPORT=`ps aux | grep $1 | egrep -o "Xtightvnc[4]{0,1} \:[0-9]{1,2}" | \
        awk '{print $2}'`
    ISSTARTED=`pgrep -u $1 vnc | wc -l`
    IP=`ifconfig  | egrep -o "([0-9]{1,3}\.){3}[0-9]{1,3}" | head -n1`
    DISKQUOTA=`repquota -u -s -a | grep $1 | awk '{print $2'} | \
        tail -n1`
    if [ ! -e vnclist ] ; then
        touch vnclist
    fi
}

start_VNC() {
    if [ $ISSTARTED != '0' ] ; then
        >&2 echo "already running"
    elif [ $DISKQUOTA = '+-' ] ; then
        >&2 echo "disk quota exceeded"
    else
        su $1 -c "vncserver 2> /dev/null"
        echo "success"
        check_user $1
        echo "VNC: $IP$VNCPORT"
    fi
}

stop_VNC() {
    if [ $ISSTARTED = '0' ] ; then
        >&2 echo "already stopped"
    else
        su $1 -c "vncserver -kill $VNCPORT 2> /dev/null"
        echo "success"
    fi
}

restart_VNC() {
    stop_VNC $1
    sleep 2s
    start_VNC $1
}

status_VNC() {
    if [ $ISSTARTED = '0' ] ; then
        echo "down"
    elif [ $ISSTARTED > '0' ] ; then
        echo "running"
    fi
}

action_all() {
    for vnc_users in `cat vnclist` ; do
        $PATH_SCRIPT $1 $vnc_users
    done
}

if [ $USER = "all" ] ; then
    if [ $ACTION = "start" ] ; then
        action_all start
    elif [ $ACTION = "stop" ] ; then
        action_all stop
    elif [ $ACTION = "restart" ] ; then
        action_all restart
    elif [ $ACTION = "status" ] ; then
        action_all status
    fi

elif [ $USER != "all" ] ; then
    check_user $USER
    if [ $ACTION = 'start' ] ; then
        start_VNC $USER
    elif [ $ACTION = 'stop' ] ; then
        stop_VNC $USER
    elif [ $ACTION = 'restart' ] ; then
        restart_VNC $USER
    elif [ $ACTION = 'status' ] ; then
        status_VNC $USER
    fi
fi
