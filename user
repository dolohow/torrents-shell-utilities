#!/bin/bash

ACTION=$1
PARAM=$2
PARAM2=$3

HAVE_VNC=`cat vnclist | grep -x $2 | wc -l`
HAVE_RT=`ls /var/rutorrent/rutorrent/conf/users | grep -w $2 | wc -l`
RUTORRENT_PASSWD='/usr/local/lighttpd/rutorrent_passwd'

create_archive() {
    mkdir /root/archiwum/$PARAM
    updatedb
    locate $PARAM > /root/archiwum/$PARAM/$PARAM.torrents
    cat /usr/local/lighttpd/logs/access.log | grep $PARAM | \
        egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}' | \
        sort -u >> /root/archiwum/$PARAM/$PARAM.ip
    cat /usr/local/lighttpd/logs/access.log.1 | grep $PARAM | \
        egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}' | \
        sort -u >> /root/archiwum/$PARAM/$PARAM.ip
    zcat /usr/local/lighttpd/logs/*gz | grep $PARAM | \
        egrep -o '([0-9]{1,3}\.){3}[0-9]{1,3}' | \
        sort -u >> /root/archiwum/$PARAM/$PARAM.ip
    cat /root/archiwum/$PARAM/$PARAM.ip | \
        sort -u > /root/archiwum/$PARAM.ip-new
    mv /root/archiwum/$PARAM.ip-new /root/archiwum/$PARAM/$PARAM.ip
}

if [ $1 = "block" ] ; then
    iptables -A OUTPUT -p tcp -m owner --uid-owner $2 -j DROP
    echo "$2 - konto zablokowane"
    iptables-save > /etc/iptables.save

elif [ $1 = "unblock" ] ; then
    line=`iptables -L OUTPUT --line-numbers | grep $2 | awk '{print $1}'`
    for i in $line ; do
        iptables -D OUTPUT $i
    done
    echo "$2 - zostaÅ‚ odblokowany"
    iptables-save > /etc/iptables.save

elif [ $1 = "transfer-restart" ] ; then
    line=`iptables -t mangle -L POSTROUTING -v --line-numbers | \
        grep $2 | awk '{print $1}'`
    class=`iptables -t mangle -L POSTROUTING -v | grep $2 | \
        grep -o 1:.* | grep -Po [0-9]{2}`
    for i in $(echo $line | xargs -n1 | sort -ur); do
        iptables -t mangle -D POSTROUTING $i
    done
    iptables -t mangle -I POSTROUTING $(echo $line | awk '{print $1}') \
        -o eth0 -p tcp -m owner --uid-owner $2 \
        -m quota --quota $(($3*1024*1024*1024)) -j ACCEPT
    iptables -t mangle -I POSTROUTING $(echo $line | awk '{print $1+1}') \
        -o eth0 -p tcp -m owner --uid-owner $2 \
        -j CLASSIFY --set-class 1:$class

elif [ $1 = "passwd" ] ; then
    passwd $2
    if [ $HAVE_RT != '0' ] ; then
        sed /$2/d $RUTORRENT_PASSWD > tmp
	cat tmp > $RUTORRENT_PASSWD
	./htpasswd.py -b -c 1 $2 $3
	cat 1 >> $RUTORRENT_PASSWD
	rm tmp
    fi
    if [ $HAVE_VNC != '0' ] ; then
	su $2 -c "vncpasswd"
    fi

elif [ $1 = "remove" ] ; then
    line=`iptables -t mangle -L POSTROUTING -v --line-numbers | \
        grep $2 | awk '{print $1}'`
    for i in $line ; do
        iptables -t mangle -D POSTROUTING $i
    done

    line=`iptables -L OUTPUT --line-numbers | grep $2 | \
        awk '{print $1'}`
    for i in $line ; do
        iptables -D OUTPUT $i
    done

    if [ -d /root/archiwum ] ; then
        create_archive
    else
	mkdir /root/archiwum
	create_archive
    fi
    pkill -SIGKILL -u $2
    userdel -rf $2
    rm -rf /var/rutorrent/rutorrent/conf/users/$2
    rm -rf /var/run/screen/$2
    if [ $HAVE_VNC != '0' ] ; then
	sed /$2/d vnclist > tmp
	cat tmp > vnclist
        rm tmp
    fi
    if [ $HAVE_RT != '0' ] ; then
	sed /$2/d $RUTORRENT_PASSWD > tmp
	cat tmp > $RUTORRENT_PASSWD
	rm tmp
    fi
    rm -rf /home/$2
    if [ -d /home2 ] ; then
	rm -rf /home2/$2
    fi
fi
